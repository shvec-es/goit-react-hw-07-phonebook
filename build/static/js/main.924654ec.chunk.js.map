{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","styles.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["addContact","createAction","name","number","payload","id","nanoid","deleteContact","changeFilter","itemsReducer","createReducer","state","filter","contact","filterReducer","_","contactsReducer","combineReducers","items","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","Wrapper","styled","div","Title","h2","Form","form","Label","label","Input","input","Button","button","ButtonItems","Text","p","TextFilter","List","ul","Items","li","getFilter","getFilteredContacts","getItems","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","find","alert","type","pattern","title","onChange","required","Filter","ContactListItem","onClick","ContactList","map","onDeleteItem","App","filteredContacts","length","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.924654ec.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport const addContact = createAction(\r\n  'contacts/AddContact',\r\n  ({ name, number }) => {\r\n    return {\r\n      payload: {\r\n        id: nanoid(),\r\n        name,\r\n        number,\r\n      },\r\n    };\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAction('contacts/DeleteContact');\r\nexport const changeFilter = createAction('contacts/ChangeFilter');\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\n\r\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\r\n\r\nconst itemsState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst itemsReducer = createReducer(itemsState, {\r\n  [addContact]: (state, { payload }) => [payload, ...state],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = getDefaultMiddleware =>\r\n  getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  });\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 600px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 25px auto 0;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: DarkCyan;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  color: Teal;\r\n  font-size: 1em;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0.5em;\r\n  margin: 0.5em;\r\n  color: Teal;\r\n  background: AliceBlue;\r\n  border: none;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: DarkCyan;\r\n  color: white;\r\n\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid DarkCyan;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background: white;\r\n    color: DarkCyan;\r\n  }\r\n`;\r\n\r\nconst ButtonItems = styled(Button)`\r\n  margin: 0;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  color: Teal;\r\n  font-size: 1em;\r\n`;\r\n\r\nconst TextFilter = styled(Text)`\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  margin-top: 15px;\r\n  padding: 15px;\r\n  border: 2px solid DarkCyan;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst Items = styled.li`\r\n  min-width: 300px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: baseline;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nexport {\r\n  Wrapper,\r\n  Title,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  ButtonItems,\r\n  Text,\r\n  TextFilter,\r\n  List,\r\n  Items,\r\n};\r\n","export const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = state => {\r\n  const items = getItems(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return items.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Label, Input, Button } from 'styles';\r\nimport { addContact } from '../../redux/contacts/contacts-actions';\r\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const items = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (items.find(contact => contact.name === name)) {\r\n      return alert(`${name} is already in contacts!`);\r\n    }\r\n\r\n    dispatch(addContact({ name, number }));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label>\r\n        Name\r\n        <br />\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </Label>\r\n      <Label>\r\n        Number\r\n        <br />\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </Label>\r\n      <Button type=\"submit\">Add contact</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { TextFilter, Input } from 'styles';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from 'redux/contacts/contacts-selectors';\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeFilter = e => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <>\r\n      <TextFilter>Find contacts by name</TextFilter>\r\n      <Input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChangeFilter}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Text, ButtonItems } from 'styles';\r\n\r\nconst ContactListItem = ({ name, number, onClick }) => {\r\n  return (\r\n    <>\r\n      <Text>{name}:</Text>\r\n      <Text>{number}</Text>\r\n      <ButtonItems type=\"button\" onClick={onClick}>\r\n        Delete\r\n      </ButtonItems>\r\n    </>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contacs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { List, Items } from 'styles';\r\nimport ContactListItem from './ContactListItem';\r\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\r\n\r\nconst ContactList = () => {\r\n  const items = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteItem = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <List>\r\n      {items.map(({ id, name, number }) => (\r\n        <Items key={id}>\r\n          <ContactListItem\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onClick={() => onDeleteItem(id)}\r\n          />\r\n        </Items>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useSelector } from 'react-redux';\nimport { Wrapper, Title } from 'styles';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nfunction App() {\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  return (\n    <Wrapper>\n      <div>\n        <Title>Phonebook</Title>\n        <ContactForm />\n      </div>\n      {filteredContacts.length > 0 ? (\n        <div>\n          <Title>Contacts</Title>\n          <Filter />\n          <ContactList />\n        </div>\n      ) : (\n        <Title>You don't have contacts</Title>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport { store, persistor } from 'redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}